---

apiVersion: v1
kind: Namespace
metadata:
  name: portainer

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-portainer-clusteradmin
  namespace: portainer
  labels:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: portainer
  namespace: portainer
  labels:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    namespace: portainer
    name: sa-portainer-clusteradmin

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: portainer
  namespace: portainer
  annotations:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteOnce

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: portainer
  namespace: portainer
  annotations:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: portainer
      app.kubernetes.io/instance: portainer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portainer
        app.kubernetes.io/instance: portainer
    spec:
      serviceAccountName: sa-portainer-clusteradmin
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: portainer
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
      containers:
        - name: portainer-ce
          image: portainer/portainer-ce
          volumeMounts:
            - name: data
              mountPath: /data
            - name: dockersock
              mountPath: /var/run/docker.sock
          ports:
            - containerPort: 9000
          livenessProbe:
            httpGet:
              path: /
              port: 9000
          readinessProbe:
            httpGet:
              path: /
              port: 9000

---

apiVersion: v1
kind: Service
metadata:
  name: portainer
  namespace: portainer
spec:
  ports:
    - port: 9000
  selector:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: portainer
  namespace: portainer
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`portainer.localtest.me`)
      kind: Rule
      services:
        - name: portainer
          port: 9000
