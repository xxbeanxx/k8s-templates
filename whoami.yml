---

apiVersion: v1
kind: Namespace
metadata:
  name: whoami

---

# Deploy a Tiny Go webserver that prints OS information and HTTP request to output.
# see: https://hub.docker.com/r/containous/whoami
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami
  namespace: whoami
  annotations:
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: whoami
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: whoami
      app.kubernetes.io/instance: whoami
  template:
    metadata:
      labels:
        app.kubernetes.io/name: whoami
        app.kubernetes.io/instance: whoami
    spec:
      containers:
        - name: whoami
          image: containous/whoami
          ports:
            - containerPort: 80

---

# Expose a service endpoint.
apiVersion: v1
kind: Service
metadata:
  name: whoami
  namespace: whoami
  annotations:
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: whoami
spec:
  ports:
    - port: 80
  selector:
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: whoami

---

# Create a traefik ingress route that answers for host whoami.localhost
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: whoami
  namespace: whoami
  annotations:
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: whoami
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`whoami.localtest.me`)
      kind: Rule
      services:
        - name: whoami
          port: 80